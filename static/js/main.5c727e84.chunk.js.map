{"version":3,"sources":["models/UserModel.js","pages/LogIn/LogIn.js","pages/SignUp/SignUp.js","pages/HomePage/HomePage.js","models/CommentsModel.js","components/UpdateMessageModal/UpdateMessageModal.js","components/MessagesView/MessagesView.js","components/NewMessageModal/NewMessageModal.js","pages/Messages/Messages.js","components/NewVotingModal/NewVotingModal.js","components/PieChart/PieChart.js","components/EndDataUpdateModal/EndDateUpdateModal.js","components/VotingsView/VotingsView.js","pages/Votings/Votings.js","components/NewTenantModat/NewTenantModal.js","components/UpdateTenantsModal/UpdateTenantsModal.js","components/TenantsView/TenantsView.js","pages/Tenants/Tenants.js","pages/Dashboards/Dashboards.js","models/MessageModel.js","models/VotingModel.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["UserModel","parseUser","this","id","fname","get","lname","email","building","apartment","isCommitteeMember","img","url","community","deleted","LogIn","props","onLogIn","useState","userName","setUserName","setEmail","pwd","setPwd","redirect","setRedirect","error","setError","a","Parse","User","logIn","console","log","user","to","className","Form","Alert","variant","Group","controlId","Label","Control","value","type","placeholder","onChange","e","target","Text","Button","onClick","SignUp","onSignUp","setFname","setLname","setImg","city","setCity","street","setStreet","setBuilding","setApartment","Community","Object","extend","myNewObject","set","save","result","File","name","signUp","then","catch","imgURL","URL","createObjectURL","as","Row","accept","files","length","Image","src","HomePage","activeUser","onLogOut","Container","Carousel","Item","alt","Caption","CommentsModel","results","createdAt","description","parseComment","UpdateMessageModal","show","handleClose","updateMessage","currentTitle","currentDetails","currentPriority","currentImg","title","setTitle","details","setDetails","priority","setPriority","closeModal","Modal","onHide","size","Header","closeButton","Title","Body","column","sm","Col","Footer","MessagesView","commentsView","messages","users","deleteMessage","updateMessageFromModal","selectedMsg","setSelectedMsg","commentsArr","setCommentsArr","showModal","setShowModal","addComment","setAddComment","loading","setLoading","useEffect","msg","query","Query","equalTo","parseMsg","find","parseComments","map","item","fetchCommentsData","readBy","message","object","response","msgOnClick","eventKey","wasReadByUser","push","includes","addCommentToDB","Comment","msgObject","current","concat","comment","getFullName","messagesView","index","Card","Accordion","Toggle","getIcon","Collapse","InputGroup","FormControl","Append","indexOf","defaultActiveKey","NewMessageModal","addMessage","Messages","searchByStr","setSearchByStr","filterByPriority","setFilterByPriority","sortBy","setSortBy","filteredMsg","filter","sort","msg1","msg2","lg","md","DropdownButton","onSelect","Dropdown","href","Check","label","NewVotingModal","addVoting","Date","endDate","setEndDate","options","setOptions","newOption","setNewOption","required","option","items","splice","handleRemoveOption","Prepend","aria-describedby","PieChart","voting","isResData","dataArr","usersArr","i","res","data","labels","datasets","backgroundColor","borderColor","borderWidth","EndDateUpdateModal","currentEndDate","updateVoting","toLocaleDateString","noValidate","VotingsView","isActive","votings","updateVotingFromModal","updateSelectedVote","selectedVoting","setSelectedVoting","userVote","votingsView","getFinalResult","handleSelectedVote","Votings","activeVotingsArr","setActiveVotingsArr","finishedVotingsArr","setFinishedVotingsArr","filteredFinishedVotings","filteredActiveVotings","NewTenantModal","addTenant","UpdateTenantsModal","updateTenant","currentFname","currentLname","currentEmail","currentBuilding","currentApartment","TenantsView","tenants","deleteTenant","updateTenantsInfoFromModal","selectedTenant","setSelectedTenant","handleDelete","tenantsView","tenant","Tenants","updateTenantInfo","filteredTenants","Dashboards","messagesArr","MessageModel","VotingModel","parseVoting","parseVotingObj","Math","max","optionsArr","AppNavbar","greetUser","Navbar","expand","Brand","aria-controls","Nav","activeKey","Link","App","setActiveUser","setUsers","setMessages","setVotings","handleLogout","loggedInUser","logOut","newMessage","parseMessage","tmpArr","ParseMessage","destroy","Voting","getIndex","vote","newUser","acl","ACL","setPublicWriteAccess","setPublicReadAccess","setACL","parseUsers","parseMessages","parseVotings","fetchUsersData","fetchMessagesData","fetchVotingsData","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c727e84.chunk.js","sourcesContent":["class UserModel {\r\n    constructor(parseUser){\r\n        this.id = parseUser.id;\r\n        this.fname = parseUser.get(\"fname\");\r\n        this.lname = parseUser.get(\"lname\");\r\n        this.email = parseUser.get(\"fetchEmail\");\r\n        this.building = parseUser.get(\"building\");\r\n        this.apartment = parseUser.get(\"apartment\");\r\n        this.isCommitteeMember = parseUser.get(\"isCommitteeMember\");\r\n        this.img = parseUser.get(\"img\") ? parseUser.get(\"img\").url() : null;\r\n        this.community = parseUser.get(\"community\");\r\n        this.deleted = parseUser.get(\"deleted\");\r\n        this.parseUser = parseUser;\r\n    }\r\n\r\n    getFullName(){\r\n        return this.fname + \" \" + this.lname;\r\n    }\r\n}\r\n\r\nexport default UserModel;","// @flow\r\nimport * as React from 'react';\r\nimport Parse from 'parse';\r\nimport UserModel from '../../models/UserModel';\r\nimport { Alert, Button, Form} from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './LogIn.css';\r\nimport { useState } from 'react';\r\n\r\nexport function LogIn(props) {\r\n  const {onLogIn} = props;\r\n  const [userName, setUserName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [error, setError] = useState(\"alert-not-show\");\r\n\r\n  async function login() {\r\n    setError(\"alert-not-show\");\r\n    try{\r\n      const parseUser = await Parse.User.logIn(email,pwd);\r\n      console.log('Logged in user', parseUser);\r\n      const user = new UserModel(parseUser);\r\n      onLogIn(user);\r\n      setRedirect(true);\r\n    }\r\n    catch(error) {\r\n      setError(\"alert-show\");\r\n      console.error('Error while logging in user', error);\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/dashboards\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-login\">\r\n\r\n      <Form>\r\n      <Alert className={error} variant='danger'>\r\n         Wrong Email or password... \r\n         <br></br>\r\n         pleace try again\r\n      </Alert>\r\n        <h2>\r\n          Log-In to HAM\r\n        </h2>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control value={email} type=\"email\" placeholder=\"Enter your email\" onChange={(e)=>setEmail(e.target.value)}/>\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicUserName\">\r\n          <Form.Label>User name</Form.Label>\r\n          <Form.Control value={userName} type=\"text\" placeholder=\"Enter your username\" onChange={(e)=>setUserName(e.target.value)}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control value={pwd} type=\"password\" placeholder=\"Password\" onChange={(e)=>setPwd(e.target.value)}/>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"button\" onClick={login}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      \r\n    </div>\r\n  );\r\n};","import * as React from 'react';\r\nimport Parse from 'parse';\r\nimport { Button, Form, Image, Row} from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './SignUp.css';\r\nimport { useState } from 'react';\r\n\r\nexport function SignUp(props) {\r\n  const {onSignUp} = props;\r\n  const [fname, setFname] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [img, setImg] = useState(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [street, setStreet] = useState(\"\");\r\n  const [building, setBuilding] = useState(\"\");\r\n  const [apartment, setApartment] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  \r\n  function handleFileChange(e) {\r\n    if (e.target.files.length === 1) {\r\n        setImg(e.target.files[0]);\r\n    } else {\r\n        setImg(null);\r\n    }\r\n  }\r\n\r\n  async function signup() {\r\n    try{\r\n        const Community = Parse.Object.extend('Community');\r\n        const myNewObject = new Community();\r\n\r\n        myNewObject.set('address', { city: city, street: street });\r\n\r\n        const result = await myNewObject.save();\r\n        \r\n        const user = new Parse.User()\r\n        user.set('username', userName);\r\n        user.set('email', email);\r\n        user.set('fname', fname);\r\n        user.set('lname', lname);\r\n        user.set('apartment', apartment);\r\n        user.set('isCommitteeMember', true);\r\n        user.set('img', new Parse.File(img.name, img));\r\n        user.set('community', result);\r\n        user.set('building', building);\r\n        user.set('password', pwd);\r\n\r\n        user.signUp().then((user) => {\r\n        console.log('User signed up', user);\r\n        }).catch(error => {\r\n        console.error('Error while signing up user', error);\r\n        });\r\n        onSignUp(user);\r\n        setRedirect(true);\r\n        }\r\n        catch(error){\r\n            console.error('Error while creating Community: ', error);\r\n        }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const imgURL = img ? URL.createObjectURL(img) : \"\";\r\n\r\n  return (\r\n    <div className=\"p-signup\">\r\n        \r\n      <Form>\r\n      <h2>\r\n            Create a Committee Member Account\r\n        </h2>\r\n        <Form.Group controlId=\"formBasicUserFirstName\">\r\n          <Form.Label>First name</Form.Label>\r\n          <Form.Control value={fname} type=\"text\" placeholder=\"Enter your first name\" onChange={(e)=>setFname(e.target.value)}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicUserLastName\">\r\n          <Form.Label>Last name</Form.Label>\r\n          <Form.Control value={lname} type=\"text\" placeholder=\"Enter your last name\" onChange={(e)=>setLname(e.target.value)}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicUserLastName\">\r\n          <Form.Label>User name</Form.Label>\r\n          <Form.Control value={userName} type=\"text\" placeholder=\"Select your user name\" onChange={(e)=>setUserName(e.target.value)}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control value={email} type=\"email\" placeholder=\"Enter your email\" onChange={(e)=>setEmail(e.target.value)}/>\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control value={pwd} type=\"password\" placeholder=\"Password\" onChange={(e)=>setPwd(e.target.value)}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicUserCity\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control value={city} type=\"text\" placeholder=\"Enter city name\" onChange={(e)=>setCity(e.target.value)}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicUserLastName\">\r\n          <Form.Label>Street</Form.Label>\r\n          <Form.Control value={street} type=\"text\" placeholder=\"Enter street name\" onChange={(e)=>setStreet(e.target.value)}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicUserLastName\">\r\n          <Form.Label>Building</Form.Label>\r\n          <Form.Control value={building} type=\"text\" placeholder=\"Enter building number\" onChange={(e)=>setBuilding(e.target.value)}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicUserLastName\">\r\n          <Form.Label>Apartment</Form.Label>\r\n          <Form.Control value={apartment} type=\"text\" placeholder=\"Enter apartment number\" onChange={(e)=>setApartment(e.target.value)}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} controlId=\"formHorizontalImage\">\r\n          <Form.Label>Img</Form.Label>\r\n          <Form.Control type=\"file\" placeholder=\"Select profile img\" accept=\"image/*\" onChange={handleFileChange}/>\r\n        </Form.Group>\r\n\r\n        <Image src={imgURL} className=\"img-preview\"/>\r\n\r\n        <Button variant=\"primary\" type=\"button\" onClick={signup}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      \r\n      \r\n    </div>\r\n  );\r\n};","// @flow\r\nimport * as React from 'react';\r\nimport { Carousel, Container, Row } from 'react-bootstrap';\r\nimport './HomePage.css';\r\n\r\nexport function HomePage(props) {\r\n  const {activeUser, onLogOut} = props;\r\n  return (\r\n    <div className=\"p-hp\">\r\n      <div>\r\n\r\n        <Container>\r\n          <Row className=\"justify-content-lg-center\">\r\n            <h1>Homeowner Association Management System</h1>\r\n          </Row>\r\n          <Row>\r\n          <Carousel>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block img-set mx-auto\"\r\n                src=\"https://www.gethow.org/wp-content/uploads/2019/08/property-manager.jpg\"\r\n                alt=\"First slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                <h3>Manage your committee</h3>\r\n                <p>With this app you will find it very easy to manage your committee</p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block img-set mx-auto\"\r\n                src=\"https://images.idgesg.net/images/article/2018/01/group-of-people-applauding_agreement_community-100746938-large.jpg\"\r\n                alt=\"Third slide\"\r\n              />\r\n\r\n              <Carousel.Caption>\r\n                <h3>Improve your performance</h3>\r\n                <p>This app will help you improve your performance</p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block img-set mx-auto\"\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTqXbDmRJkcFQWqNf-cBaynQC-2sNF6mKcDag&usqp=CAU\"\r\n                alt=\"Third slide\"\r\n              />\r\n\r\n              <Carousel.Caption>\r\n                <h3>Happy tenants</h3>\r\n                <p>Useing this app will lead to much happyer tenants</p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          </Carousel>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      </div>\r\n  );\r\n};","import UserModel from \"./UserModel\";\r\n\r\nclass CommentsModel {\r\n    constructor(results){\r\n        this.id = results.id;\r\n        this.createdAt = results.get(\"createdAt\");\r\n        this.description = results.get(\"description\");\r\n        this.user = results.get(\"user\");\r\n        this.parseComment = results;\r\n    }\r\n}\r\n\r\nexport default CommentsModel;","import { useState } from 'react';\r\nimport { Button, Col, Form, Image, Modal, Row } from 'react-bootstrap';\r\n\r\nfunction UpdateMessageModal(props) {\r\n    const { show, handleClose, updateMessage, id, currentTitle, currentDetails, currentPriority, currentImg} = props;\r\n    const [title, setTitle] = useState(\"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [priority, setPriority] = useState(null);\r\n    const [img, setImg] = useState(null);\r\n    \r\n    function closeModal() {\r\n      setTitle(\"\");\r\n      setDetails(\"\");\r\n      setPriority(null);\r\n      setImg(null);\r\n      handleClose();\r\n    }\r\n\r\n    function handleFileChange(e) {\r\n      if (e.target.files.length === 1) {\r\n          setImg(e.target.files[0]);\r\n      } else {\r\n          setImg(null);\r\n      }\r\n    }\r\n\r\n    function handleUpdateMessage() {\r\n        const newTitle = title ? title : currentTitle;\r\n        const newDetails = details ? details : currentDetails;\r\n        const newPriority = priority ? priority : currentPriority;\r\n        const newImg = img ? img : currentImg;\r\n        updateMessage(id, newTitle, newDetails, newPriority, newImg);\r\n        closeModal();\r\n    }\r\n  \r\n    const imgURL = img ? URL.createObjectURL(img) : \"\";\r\n\r\n    return (\r\n      <Modal show={show} onHide={closeModal} size=\"xl\" className=\"c-new-message-modal\">\r\n          <Modal.Header closeButton>\r\n              <Modal.Title>Update Message</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <Form>\r\n                \r\n                  <Form.Group as={Row} controlId=\"formHorizontalName\">\r\n                      <Form.Label column sm={2}>\r\n                          Message Title\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                          <Form.Control type=\"text\" placeholder={currentTitle} value={title} onChange={e => setTitle(e.target.value)} />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={2}>\r\n                          Message Details\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                          <Form.Control type=\"text\" placeholder={currentDetails} value={details} onChange={e => setDetails(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={2}>\r\n                          Message Priority\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                          <Form.Control type=\"text\" placeholder={currentPriority} value={priority} onChange={e => setPriority(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalImage\">\r\n                      <Form.Label column sm={2}>\r\n                          Message Image\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                          <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n                      </Col>\r\n                  </Form.Group>\r\n              </Form>\r\n              <Image src={imgURL} className=\"img-preview\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={closeModal}>\r\n                  Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={handleUpdateMessage}>\r\n                  Update Message\r\n              </Button>\r\n          </Modal.Footer>\r\n      </Modal>\r\n  );\r\n  }\r\n\r\nexport default UpdateMessageModal;","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Accordion, Button, Card, Form, FormControl, InputGroup } from 'react-bootstrap';\r\nimport './MessagesView.css';\r\nimport Parse from 'parse';\r\nimport CommentsModel from '../../models/CommentsModel';\r\nimport { BellFill, EnvelopeFill, EnvelopeOpen, PersonCircle } from 'react-bootstrap-icons';\r\nimport UpdateMessageModal from '../UpdateMessageModal/UpdateMessageModal';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction MessagesView(props) {\r\n    const {messages, activeUser, users, deleteMessage, updateMessageFromModal} = props;\r\n    const [selectedMsg, setSelectedMsg] = useState(null);\r\n    const [commentsArr, setCommentsArr] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [addComment, setAddComment] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(()=> {\r\n\r\n        async function fetchCommentsData(msg) {\r\n            const parseComment = Parse.Object.extend('Comment');\r\n            const query = new Parse.Query(parseComment);\r\n            query.equalTo(\"msg\", messages[selectedMsg].parseMsg);\r\n            const parseComments = await query.find();\r\n            setCommentsArr(parseComments.map(item => new CommentsModel(item)));\r\n            setLoading(false);\r\n            console.log(\"comments arr\", commentsArr);\r\n        }\r\n            if (selectedMsg !== null) {\r\n                fetchCommentsData();\r\n            }\r\n    }, [selectedMsg])\r\n\r\n    if(!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    async function updateMessage(readBy, id){\r\n        const message = Parse.Object.extend('message');\r\n        const query = new Parse.Query(message);\r\n        const object = await query.get(id);\r\n        object.set('readBy', readBy);\r\n        try{\r\n            const response = await object.save();\r\n            console.log('Updated message', response);\r\n        }\r\n        catch (error1) {\r\n            console.error('Error while updating message', error1);\r\n        }\r\n    }\r\n\r\n    function msgOnClick(eventKey) {\r\n        setLoading(true);\r\n        setSelectedMsg(eventKey);\r\n\r\n        if (wasReadByUser(eventKey)){\r\n            return;\r\n        } else {\r\n            messages[eventKey].readBy.push(activeUser.id)\r\n            updateMessage(messages[eventKey].readBy, messages[eventKey].id);\r\n        }\r\n    }\r\n\r\n    function wasReadByUser(eventKey) {\r\n        if (messages[eventKey].readBy.includes(activeUser.id)){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function addCommentToDB() {\r\n        const message = Parse.Object.extend('message');\r\n        const query = new Parse.Query(message);\r\n        const Comment = Parse.Object.extend('Comment');\r\n        const myNewObject = new Comment();\r\n        const msgObject = await query.get(messages[selectedMsg].id);\r\n        myNewObject.set('description', addComment);\r\n        myNewObject.set('user', Parse.User.current());\r\n        myNewObject.set('msg', msgObject);\r\n\r\n        myNewObject.save().then(\r\n        (result) => {\r\n            console.log('Comment created', result);\r\n            setCommentsArr(commentsArr.concat(new CommentsModel(result)));\r\n            setLoading(false);\r\n        },\r\n        (error) => {\r\n            console.error('Error while creating Comment: ', error);\r\n        }\r\n        );\r\n        setAddComment(\"\");\r\n    }\r\n\r\n    //convert data to presentation\r\n    let commentsView;\r\n    if (users) {\r\n        commentsView = commentsArr.map(comment => {\r\n            const user = users.find(user => user.id === comment.user.id);\r\n            return <div className=\"comments-data\" key={comment.id}>\r\n                <div>{user.img ? <img src={user.img}></img> : <PersonCircle/>} {user.getFullName()}:</div>\r\n                <div>{comment.description}</div>\r\n            </div>}) \r\n    }\r\n    \r\n    const messagesView = messages.map((msg,index) => {\r\n        return <Card key={messages.indexOf(msg)}>\r\n            <Accordion.Toggle as={Card.Header} eventKey={'' + index}  onClick={e=>msgOnClick(index)}>\r\n            <div className=\"header-acc\">\r\n                <div>\r\n                    {wasReadByUser(index) ? null : <BellFill/>}\r\n                    {msg.title}\r\n                </div>\r\n                <div>\r\n                    {msg.getIcon()}\r\n                </div>\r\n            </div>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey={'' + index}>\r\n                \r\n            <Card.Body>\r\n                <div className=\"msg-comments-view\">\r\n                    <div className=\"msg-data\">\r\n                        {msg.img ? <img src={msg.img}></img> : <EnvelopeOpen></EnvelopeOpen> }\r\n                        <p>\r\n                            Details: {msg.details}\r\n                        </p>\r\n                        <p>\r\n                            Priority: {msg.priority}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"comments\">\r\n                        <p>\r\n                            Comments:\r\n                        </p>\r\n                        <div>\r\n                            {loading ? \"loading...\" : commentsView}\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"msg-btm\">\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                value={addComment}\r\n                                onChange={e => setAddComment(e.target.value)}\r\n                                type=\"text\"\r\n                                placeholder=\"Add comment\"\r\n                                />\r\n                                <InputGroup.Append>\r\n                                <Button onClick={addCommentToDB} variant=\"outline-secondary\">Add</Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                            </div>\r\n                            {activeUser.isCommitteeMember ?\r\n                            <div className=\"msg-btm\">\r\n                                <Button onClick={() => setShowModal(true)}>Update</Button>\r\n                                <Button onClick={ e=> deleteMessage(msg.id)}>Delete</Button>\r\n                                </div> : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    });\r\n\r\n    return (\r\n        <div className=\"c-msg-view\">\r\n            <Accordion defaultActiveKey={selectedMsg}>\r\n                {messagesView}\r\n            </Accordion>\r\n            {(selectedMsg !== null && messages && selectedMsg < messages.length) ? <UpdateMessageModal\r\n                show={showModal} \r\n                handleClose={() => setShowModal(false)} \r\n                updateMessage={updateMessageFromModal} \r\n                id={messages[selectedMsg].id} \r\n                currentTitle={messages[selectedMsg].title} \r\n                currentDetails={messages[selectedMsg].details} \r\n                currentPriority={messages[selectedMsg].priority} \r\n                currentImg={messages[selectedMsg].img}/> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessagesView;","import { useState } from 'react';\r\nimport { Button, Col, Form, Image, Modal, Row } from 'react-bootstrap';\r\n\r\nfunction NewMessageModal(props) {\r\n    const { show, handleClose, addMessage } = props;\r\n    const [title, setTitle] = useState(\"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [priority, setPriority] = useState(\"Info\");\r\n    const [img, setImg] = useState(\"\");\r\n    \r\n    function closeModal() {\r\n      setTitle(\"\");\r\n      setDetails(\"\");\r\n      setPriority(null);\r\n      setImg(null);\r\n      handleClose();\r\n    }\r\n\r\n    function handleFileChange(e) {\r\n      if (e.target.files.length === 1) {\r\n          setImg(e.target.files[0]);\r\n      } else {\r\n          setImg(null);\r\n      }\r\n    }\r\n\r\n    function handleAddMessage() {\r\n      addMessage(title, details, priority, img);\r\n      closeModal();\r\n    }\r\n  \r\n    const imgURL = img ? URL.createObjectURL(img) : \"\";\r\n\r\n    return (\r\n      <Modal show={show} onHide={closeModal} size=\"xl\" className=\"c-new-message-modal\">\r\n          <Modal.Header closeButton>\r\n              <Modal.Title>New Message</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <Form>\r\n                \r\n                  <Form.Group as={Row} controlId=\"formHorizontalName\">\r\n                      <Form.Label column sm={2}>\r\n                          Message Title\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                          <Form.Control type=\"text\" placeholder=\"Message Title\" value={title} onChange={e => setTitle(e.target.value)} />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={2}>\r\n                          Message Details\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                          <Form.Control type=\"text\" placeholder=\"Message Details\" value={details} onChange={e => setDetails(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={2}>\r\n                          Priority\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                          <Form.Control type=\"text\" placeholder=\"Message Priority\" value={priority} onChange={e => setPriority(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalImage\">\r\n                      <Form.Label column sm={2}>\r\n                          Message Image\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                          <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n                      </Col>\r\n                  </Form.Group>\r\n              </Form>\r\n              <Image src={imgURL} className=\"img-preview\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={closeModal}>\r\n                  Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={handleAddMessage}>\r\n                  Create Message\r\n              </Button>\r\n          </Modal.Footer>\r\n      </Modal>\r\n  );\r\n  }\r\n\r\nexport default NewMessageModal;","import React, { useState } from 'react';\r\nimport { Button, Col, Container, Dropdown, DropdownButton, Form, Row } from 'react-bootstrap';\r\nimport './Messages.css';\r\nimport MessagesView from '../../components/MessagesView/MessagesView';\r\nimport NewMessageModal from '../../components/NewMessageModal/NewMessageModal';\r\nimport { Redirect } from 'react-router';\r\n\r\n//Messages component is the page were user see all relevant messages, sort and filter them\r\n//Committee member can add a new message, update message details and delete message\r\n//All user can also add comments to each message\r\nfunction Messages(props) {\r\n    const {activeUser, users, messages, addMessage, updateMessage, deleteMessage, onLogOut} = props;\r\n    const [searchByStr, setSearchByStr] = useState(\"\");\r\n    const [filterByPriority, setFilterByPriority] = useState(null);\r\n    const [sortBy, setSortBy] = useState(\"createdAt\");\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n\r\n    if(!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    //convert data to presentation\r\n  \r\n    const filteredMsg = messages.filter(msg => {return (msg.title.includes(searchByStr) || msg.details.includes(searchByStr)) && (filterByPriority ? msg.priority === filterByPriority : true)});\r\n    \r\n    filteredMsg.sort((msg1, msg2) => {\r\n        if(msg1[sortBy] > msg2[sortBy]){\r\n            return 1;\r\n        } else if (msg1[sortBy] < msg2[sortBy]){\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    })\r\n        \r\n    return (\r\n        <div className=\"p-messages\">\r\n            <div className=\"filters\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg={5} md={12} sm={12}>\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicSearch\">\r\n                                <Form.Control value={searchByStr} type=\"text\" placeholder=\"Filter by text in Title and Details\" onChange={e => setSearchByStr(e.target.value)}/>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                        <Col lg={3} md={6} sm={12}>\r\n                            <DropdownButton className=\"filter-btn\" value={filterByPriority} id=\"dropdown-basic-button\" title={\"Filter by Priority: \" + filterByPriority} onSelect={e => setFilterByPriority(e)}>\r\n                                <Dropdown.Item eventKey=\"Info\" href=\"#\">Info</Dropdown.Item>\r\n                                <Dropdown.Item eventKey=\"Important\" href=\"#\">Important</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </Col>\r\n                        <Col lg={4} md={6} sm={12}>\r\n                            <Form>\r\n                                <Form.Group value={sortBy} as={Row} onChange={e => setSortBy(e.target.value)}>\r\n                                    <Form.Label column as=\"legend\">Sort By:</Form.Label>\r\n                                    <Form.Check value=\"createdAt\" type=\"radio\" label=\"Date\" name=\"formHorizontalRadios\" id=\"formHorizontalRadios1\" className=\"sort-by\"/>\r\n                                    <Form.Check value=\"priority\" type=\"radio\" label=\"Priority\" name=\"formHorizontalRadios\" id=\"formHorizontalRadios2\" className=\"sort-by\"/>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {activeUser.isCommitteeMember ?\r\n                        <Col className=\"new-msg-btn\">\r\n                            <Button variant=\"link\" onClick={() => setShowModal(true)}>New Message</Button>\r\n                        </Col> : null}\r\n                    </Row>\r\n                </Container>\r\n                \r\n            </div>\r\n            \r\n            <Container>\r\n                <MessagesView messages={filteredMsg} activeUser={activeUser} users={users} deleteMessage={deleteMessage} updateMessageFromModal={updateMessage}/>\r\n            </Container>\r\n            <NewMessageModal show={showModal} handleClose={() => setShowModal(false)} addMessage={addMessage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import { useState } from 'react';\r\nimport { Button, Col, Form, FormControl, FormGroup, Image, InputGroup, Modal, Row } from 'react-bootstrap';\r\nimport { FileMinusFill, PlusCircleFill } from 'react-bootstrap-icons';\r\nimport './NewVotingModal.css';\r\n\r\nfunction NewVotingModal(props) {\r\n    const { show, handleClose, addVoting } = props;\r\n    const [title, setTitle] = useState(\"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [options, setOptions] = useState([]);\r\n    const [newOption, setNewOption] = useState(\"\");\r\n    \r\n    function closeModal() {\r\n      setTitle(\"\");\r\n      setDetails(\"\");\r\n      setEndDate(null);\r\n      setOptions([]);\r\n      setNewOption(\"\");\r\n      handleClose();\r\n    }\r\n\r\n    function handleAddMessage() {\r\n      addVoting(title, details, endDate, options);\r\n      closeModal();\r\n    }\r\n  \r\n    function handleRemoveOption(option) {\r\n        let items = [...options];\r\n        const index = items.indexOf(option)\r\n        if (index !== -1) {\r\n            items.splice(index, 1);\r\n            setOptions(items);\r\n  }\r\n    }\r\n    return (\r\n      <Modal show={show} onHide={closeModal} size=\"xl\" className=\"c-new-voting-modal\">\r\n          <Modal.Header closeButton>\r\n              <Modal.Title>New Voting</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <Form>\r\n                \r\n                  <Form.Group as={Row} controlId=\"formHorizontalName\">\r\n                      <Form.Label column sm={2}>\r\n                          Title\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                          <Form.Control type=\"text\" placeholder=\"Voting Title\" required value={title} onChange={e => setTitle(e.target.value)} />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={2}>\r\n                        Details\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                          <Form.Control type=\"text\" placeholder=\"Voting Details\" required value={details} onChange={e => setDetails(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={2}>\r\n                        End Date\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                          <Form.Control type=\"date\" placeholder=\"Voting End Date\" required value={endDate} onChange={e => setEndDate(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Label column sm={2}>\r\n                             Options\r\n                         </Form.Label>\r\n                  {options.map((option,index) => \r\n                    <InputGroup className=\"options-group\" key={index} as={Row} controlId=\"inputHorizontalOption\">\r\n                        \r\n                         {/* <Col> */}\r\n                                <FormControl className=\"option\"\r\n                                type=\"text\" placeholder={option} required\r\n                                />\r\n                                <InputGroup.Append>\r\n                                <Button variant=\"outline-secondary\" onClick={()=>handleRemoveOption(option)}>\r\n                                    <FileMinusFill></FileMinusFill>\r\n                                </Button>\r\n                                </InputGroup.Append>\r\n                        {/* </Col> */}\r\n                    </InputGroup>\r\n                    )}\r\n                    <InputGroup className=\"sm-3\">\r\n                        <InputGroup.Prepend>\r\n                        <Button variant=\"outline-secondary\" onClick={()=>setOptions(options.concat(newOption))}>\r\n                            <PlusCircleFill></PlusCircleFill>\r\n                        </Button>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl value={newOption} aria-describedby=\"basic-addon1\" placeholder=\"Add option\" onChange={e=>setNewOption(e.target.value)}/>\r\n                    </InputGroup>\r\n\r\n              </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={closeModal}>\r\n                  Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={handleAddMessage}>\r\n                  Create Voting\r\n              </Button>\r\n          </Modal.Footer>\r\n      </Modal>\r\n  );\r\n  }\r\n\r\nexport default NewVotingModal;","import React from 'react';\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nfunction PieChart(props) {\r\n    const {voting, users, isResData} = props;\r\n\r\n    let dataArr = [];\r\n    let usersArr = [];\r\n\r\n    // useEffect(()=> {\r\n    //     if (users) {\r\n    //         usersArr = users.filter(user => user.isCommitteeMember === false)\r\n    //     }\r\n    // }, [users])\r\n\r\n    if (users) {usersArr = users.filter(user => user.isCommitteeMember === false && user.deleted === false)}\r\n\r\n    if (voting && isResData) {\r\n        for (let i = 0; i < voting.options.length; i++){\r\n            dataArr[i] = 0;\r\n        }\r\n\r\n        for (const res of voting.results) {\r\n            dataArr[voting.options.indexOf(res[\"vote\"])] ++;\r\n        }\r\n    }\r\n\r\n    if (voting && !isResData) {\r\n        dataArr[0] = voting.results.length;\r\n        dataArr[1] = usersArr.length-voting.results.length;\r\n    }\r\n\r\n    function getChartData() {\r\n        return {\r\n            labels: isResData ? voting.options : [\"Voted\", \"Not Voted\"],\r\n            datasets: [\r\n              {\r\n                label: '# of Recipes',\r\n                data: dataArr,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {voting && ((isResData && voting.results.length > 0) || (!isResData)) ? <Pie data={getChartData}/> : <p>No Data</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PieChart;","import { useState } from 'react';\r\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap';\r\n\r\nfunction EndDateUpdateModal(props) {\r\n    const { show, handleClose, updateVoting, voting} = props;\r\n    const [endDate, setEndDate] = useState(\"\");\r\n    let currentEndDate;\r\n    if (voting) {\r\n        currentEndDate = voting.endDate;\r\n    }\r\n\r\n    function closeModal() {\r\n      setEndDate(\"\");\r\n      handleClose();\r\n    }\r\n\r\n    function handleUpdateEndDate() {\r\n        const newEndDate = endDate ? endDate : currentEndDate;\r\n        updateVoting(newEndDate, voting);\r\n        closeModal();\r\n    }\r\n  \r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>Change the end date</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            Current End Date:\r\n            {voting ? voting.endDate.toLocaleDateString() : null}\r\n            <Form noValidate >\r\n            <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n              <Form.Label column sm={6}>\r\n                New End Date\r\n              </Form.Label>\r\n              <Col sm={6}>\r\n                  <Form.Control required type=\"date\" placeholder=\"New End Date\" value={endDate} onChange={e => setEndDate(e.target.value)}  />\r\n              </Col>\r\n          </Form.Group>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={closeModal}>\r\n            Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleUpdateEndDate}>\r\n            Save Changes\r\n        </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n  }\r\n\r\nexport default EndDateUpdateModal;","import { useState } from 'react';\r\nimport { Accordion, Button, Card, Dropdown, DropdownButton} from 'react-bootstrap';\r\nimport './VotingsView.css';\r\nimport PieChart from '../PieChart/PieChart';\r\nimport EndDateUpdateModal from '../EndDataUpdateModal/EndDateUpdateModal';\r\n\r\nfunction VotingsView(props) {\r\n    const {isActive, votings, activeUser, updateVotingFromModal, updateSelectedVote, users} = props;\r\n    const [selectedVoting, setSelectedVoting] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [userVote, setUserVote] = useState(null);\r\n\r\n\r\n    function handleClose() {\r\n        setEndDate(null);\r\n        setShowModal(false);\r\n      }\r\n  \r\n    function handleUpdateEndDate(endDate, voting) {\r\n        setShowModal(false);\r\n        updateVotingFromModal(endDate, voting);\r\n    }\r\n    \r\n    function handleSelectedVote(item,voting) {\r\n        updateSelectedVote(item, voting)\r\n    }\r\n    \r\n    const votingsView = votings.map((voting, index) =>   \r\n        <Card key={index}>\r\n            <Accordion.Toggle as={Card.Header} eventKey={'' + index} onClick={e=>setSelectedVoting(index)}>\r\n            <div className=\"header-acc\">\r\n                <div>\r\n                    {voting.title}\r\n                </div>\r\n                {isActive ? null : <div>\r\n                    Result: {voting.getFinalResult()}\r\n                </div>}\r\n            </div>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey={'' + index}>\r\n                \r\n            <Card.Body>\r\n                <div className=\"voting-comments-view\">\r\n                    <div>\r\n                        <p>\r\n                            Details: {voting.details}\r\n                        </p>\r\n                        {activeUser.isCommitteeMember || !isActive ? null :\r\n                        <div>\r\n                        <p>\r\n                            Your vote:\r\n                        </p>\r\n                        <DropdownButton id=\"dropdown-variants-Info\" variant=\"info\" title=\"Your Vote\" value={userVote}>\r\n                            {voting.options.map(item=><Dropdown.Item value={item} onClick={()=>handleSelectedVote(item, voting)}>{item}</Dropdown.Item>)}\r\n                        </DropdownButton> \r\n                        </div>}\r\n                        \r\n                            {isActive && activeUser.isCommitteeMember ?\r\n                            <div>\r\n                                Voting Precentage\r\n                                <PieChart voting={voting} users={users} isResData={false} activeUser={activeUser}/> \r\n                            </div> : null}\r\n                            {!isActive && activeUser.isCommitteeMember ?\r\n                            <div className=\"charts\"> \r\n                                <div>\r\n                                    Voting Precentage\r\n                                    <PieChart voting={voting} users={users} isResData={false} activeUser={activeUser}/>\r\n                                </div>\r\n                                <div>\r\n                                    Voting Results\r\n                                    <PieChart voting={voting} users={users} isResData={true} activeUser={activeUser}/> \r\n                                </div>\r\n                            </div> : null}\r\n                            {!isActive && !activeUser.isCommitteeMember ?\r\n                            <div className=\"charts\"> \r\n                                <div>\r\n                                    Voting Results\r\n                                    <PieChart voting={voting} users={users} isResData={true} activeUser={activeUser}/> \r\n                                </div>\r\n                            </div> : null}\r\n                        \r\n                    </div>\r\n                    <div className=\"end-date-section\">\r\n                    <p>\r\n                            End Date: {voting.endDate.toLocaleDateString()}\r\n                        </p>\r\n                        {isActive  && activeUser.isCommitteeMember? <div className=\"voting-btm\">\r\n                        <Button onClick={() => setShowModal(true)}>Update End Date</Button>\r\n                    </div> : null}\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            </Card.Body>\r\n            </Accordion.Collapse>\r\n\r\n            \r\n         </Card>\r\n    );\r\n\r\n    return (\r\n        <div className=\"c-voting-view\">\r\n            <Accordion defaultActiveKey={selectedVoting}>\r\n                {votingsView}\r\n            </Accordion>\r\n            <EndDateUpdateModal show={showModal} handleClose={() => setShowModal(false)} updateVoting={handleUpdateEndDate} voting={votings[selectedVoting]} ></EndDateUpdateModal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VotingsView;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport NewVotingModal from '../../components/NewVotingModal/NewVotingModal';\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\r\nimport VotingsView from '../../components/VotingsView/VotingsView';\r\nimport './Votings.css';\r\n\r\n\r\n//Votings component is the page were user see all relevant votings and filter them\r\n//Committee member can add a new vote, change current voting end date and see results and voting percentage\r\n//Tenants can also vote on open votings and see results for finished votings\r\nfunction Votings(props) {\r\n    const {activeUser, votings, addVoting, updateVoting, updateSelectedVote, onLogOut, users} = props;\r\n    const [activeVotingsArr, setActiveVotingsArr] = useState([]);\r\n    const [finishedVotingsArr, setFinishedVotingsArr] = useState([]);\r\n    const [searchByStr, setSearchByStr] = useState(\"\");\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    useEffect(()=> {\r\n        if (activeUser) {\r\n            setActiveVotingsArr(votings.filter(item => item.endDate >= new Date()));\r\n            setFinishedVotingsArr(votings.filter(item => item.endDate < new Date()));\r\n        }\r\n        else {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n    }, [votings])\r\n\r\n    if(!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    //converting data into presentation\r\n    const filteredFinishedVotings = finishedVotingsArr.filter(voting => (voting.title.includes(searchByStr) || voting.details.includes(searchByStr)));\r\n    const filteredActiveVotings = activeUser.isCommitteeMember ? activeVotingsArr : activeVotingsArr.filter(voting => voting.results.map(res => res[\"user\"]).indexOf(activeUser.id) === -1);\r\n\r\n    return (\r\n        <div className=\"p-votings\">\r\n            <div>\r\n                <Container className=\"votings-cols\">\r\n                    <Col>\r\n                        <Row>\r\n                            <h3>Active Votings</h3>\r\n                        </Row>\r\n                        <Row>\r\n                        {activeUser.isCommitteeMember ?\r\n                            <Col className=\"new-voting-btn\">\r\n                                <Button variant=\"link\" onClick={() => setShowModal(true)}>New Voting</Button>\r\n                            </Col> : null}\r\n                        </Row>\r\n                        <Row className=\"accor-size\" sm={12}>\r\n                            <VotingsView isActive={true} votings={filteredActiveVotings} activeUser={activeUser} updateVotingFromModal={updateVoting} updateSelectedVote={updateSelectedVote} users={users}/>\r\n                        </Row>\r\n                    </Col>\r\n                    \r\n                    <Col>\r\n                        <Row>\r\n                            <h3>Votings Results</h3>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"search-size\">\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formBasicSearch\">\r\n                                    <Form.Control value={searchByStr} type=\"text\" placeholder=\"Filter by text in Title and Details\" onChange={e => setSearchByStr(e.target.value)}/>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"accor-size\" sm={12}>\r\n                            <VotingsView isActive={false} votings={filteredFinishedVotings} activeUser={activeUser} updateVotingFromModal={updateVoting} updateSelectedVote={updateSelectedVote} users={users}/>\r\n                        </Row>\r\n                    </Col>\r\n                </Container>\r\n                \r\n            </div>\r\n            \r\n            <Container>\r\n                \r\n            </Container>\r\n            <NewVotingModal show={showModal} handleClose={() => setShowModal(false)} addVoting={addVoting}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Votings;","import { useState } from 'react';\r\nimport { Button, Col, Form, Image, Modal, Row } from 'react-bootstrap';\r\n\r\nfunction NewTenantModal(props) {\r\n    const { show, handleClose, addTenant } = props;\r\n    const [fname, setFname] = useState(\"\");\r\n    const [lname, setLname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [building, setBuilding] = useState(\"\");\r\n    const [apartment, setApartment] = useState(\"\");\r\n    const [img, setImg] = useState(\"\");\r\n    \r\n    function closeModal() {\r\n      setFname(\"\");\r\n      setLname(\"\");\r\n      setEmail(\"\");\r\n      setBuilding(\"\");\r\n      setApartment(\"\");\r\n      setImg(null);\r\n      handleClose();\r\n    }\r\n\r\n    function handleFileChange(e) {\r\n      if (e.target.files.length === 1) {\r\n          setImg(e.target.files[0]);\r\n      } else {\r\n          setImg(null);\r\n      }\r\n    }\r\n    \r\n    function handleAddTenant() {\r\n      addTenant(fname, lname, email, building, apartment, img);\r\n      closeModal();\r\n    }\r\n  \r\n    const imgURL = img ? URL.createObjectURL(img) : \"\";\r\n\r\n    return (\r\n      <Modal show={show} onHide={closeModal} size=\"xl\" className=\"c-new-message-modal\">\r\n          <Modal.Header closeButton>\r\n              <Modal.Title>New Tenant</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <Form>\r\n                \r\n                  <Form.Group as={Row} controlId=\"formHorizontalName\">\r\n                      <Form.Label column sm={3}>\r\n                          First Name\r\n                      </Form.Label>\r\n                      <Col sm={9}>\r\n                          <Form.Control type=\"text\" placeholder=\"First Name\" value={fname} onChange={e => setFname(e.target.value)} />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={3}>\r\n                        Last Name\r\n                      </Form.Label>\r\n                      <Col sm={9}>\r\n                          <Form.Control type=\"text\" placeholder=\"Last Name\" value={lname} onChange={e => setLname(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={3}>\r\n                        Email\r\n                      </Form.Label>\r\n                      <Col sm={9}>\r\n                          <Form.Control type=\"email\" placeholder=\"Email Address\" value={email} onChange={e => setEmail(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={3}>\r\n                        Building\r\n                      </Form.Label>\r\n                      <Col sm={9}>\r\n                          <Form.Control type=\"text\" placeholder=\"Building\" value={building} onChange={e => setBuilding(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={3}>\r\n                        Apartment\r\n                      </Form.Label>\r\n                      <Col sm={9}>\r\n                          <Form.Control type=\"text\" placeholder=\"Apartment\" value={apartment} onChange={e => setApartment(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalImage\">\r\n                      <Form.Label column sm={3}>\r\n                          Image\r\n                      </Form.Label>\r\n                      <Col sm={9}>\r\n                          <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n                      </Col>\r\n                  </Form.Group>\r\n              </Form>\r\n              <Image src={imgURL} className=\"img-preview\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={closeModal}>\r\n                  Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={handleAddTenant}>\r\n                  Create Tenant\r\n              </Button>\r\n          </Modal.Footer>\r\n      </Modal>\r\n  );\r\n  }\r\n\r\nexport default NewTenantModal;","import { useState } from 'react';\r\nimport { Button, Col, Form, Image, Modal, Row } from 'react-bootstrap';\r\n\r\nfunction UpdateTenantsModal(props) {\r\n    const { show, user, handleClose, updateTenant, id, currentFname, currentLname, currentEmail, currentBuilding, currentApartment, currentImg} = props;\r\n    const [fname, setFname] = useState(\"\");\r\n    const [lname, setLname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [building, setBuilding] = useState(\"\");\r\n    const [apartment, setApartment] = useState(\"\");\r\n    const [img, setImg] = useState(\"\");\r\n    \r\n    function closeModal() {\r\n      setFname(\"\");\r\n      setLname(\"\");\r\n      setEmail(\"\");\r\n      setBuilding(\"\");\r\n      setApartment(\"\");\r\n      setImg(null);\r\n      handleClose();\r\n    }\r\n\r\n    function handleFileChange(e) {\r\n      if (e.target.files.length === 1) {\r\n          setImg(e.target.files[0]);\r\n      } else {\r\n          setImg(null);\r\n      }\r\n    }\r\n\r\n    function handleUpdate() {\r\n        const newFname = fname ? fname : currentFname;\r\n        const newLname = lname ? lname : currentLname;\r\n        const newEmail = email ? email : currentEmail;\r\n        const newBuilding = building ? building : currentBuilding;\r\n        const newApartment = apartment ? apartment : currentApartment;\r\n        const newImg = img ? img : currentImg;\r\n        updateTenant(user, id, newFname, newLname, newEmail, newBuilding, newApartment, newImg);\r\n        closeModal();\r\n    }\r\n  \r\n    const imgURL = img ? URL.createObjectURL(img) : \"\";\r\n\r\n    return (\r\n      <Modal show={show} onHide={closeModal} size=\"xl\" className=\"c-new-message-modal\">\r\n          <Modal.Header closeButton>\r\n              <Modal.Title>Update Tenant's Info</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n              <Form>\r\n                \r\n                  <Form.Group as={Row} controlId=\"formHorizontalName\">\r\n                      <Form.Label column sm={3}>\r\n                          First Name\r\n                      </Form.Label>\r\n                      <Col sm={9}>\r\n                          <Form.Control type=\"text\" placeholder={currentFname} value={fname} onChange={e => setFname(e.target.value)} />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={3}>\r\n                        Last Name\r\n                      </Form.Label>\r\n                      <Col sm={9}>\r\n                          <Form.Control type=\"text\" placeholder={currentLname} value={lname} onChange={e => setLname(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={3}>\r\n                        Email\r\n                      </Form.Label>\r\n                      <Col sm={9}>\r\n                          <Form.Control type=\"email\" placeholder={currentEmail} value={email} onChange={e => setEmail(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={3}>\r\n                        Building\r\n                      </Form.Label>\r\n                      <Col sm={9}>\r\n                          <Form.Control type=\"text\" placeholder={currentBuilding} value={building} onChange={e => setBuilding(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalDesc\">\r\n                      <Form.Label column sm={3}>\r\n                        Apartment\r\n                      </Form.Label>\r\n                      <Col sm={9}>\r\n                          <Form.Control type=\"text\" placeholder={currentApartment} value={apartment} onChange={e => setApartment(e.target.value)}  />\r\n                      </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"formHorizontalImage\">\r\n                      <Form.Label column sm={3}>\r\n                          Image\r\n                      </Form.Label>\r\n                      <Col sm={9}>\r\n                          <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n                      </Col>\r\n                  </Form.Group>\r\n              </Form>\r\n              <Image src={imgURL} className=\"img-preview\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={closeModal}>\r\n                  Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={handleUpdate}>\r\n                  Update Tenant\r\n              </Button>\r\n          </Modal.Footer>\r\n      </Modal>\r\n  );\r\n  }\r\n\r\nexport default UpdateTenantsModal;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Accordion, Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport './TenantsView.css';\r\nimport UpdateTenantsModal from '../UpdateTenantsModal/UpdateTenantsModal';\r\n\r\nfunction TenantsView(props) {\r\n    const {tenants, activeUser, deleteTenant, updateTenantsInfoFromModal} = props;\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedTenant, setSelectedTenant] = useState(null);\r\n\r\n    function handleDelete() {\r\n        deleteTenant(tenants[selectedTenant].id)\r\n        setSelectedTenant(null)\r\n    }\r\n\r\n    const tenantsView = tenants.map((tenant, index) => \r\n        <Card key={index}>\r\n            <Accordion.Toggle as={Card.Header} eventKey={'' + index} onClick={e=>setSelectedTenant(index)}>\r\n            <div className=\"header-acc\">\r\n                {tenant.fname} {tenant.lname}\r\n            </div>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey={'' + index}>\r\n                \r\n            <Card.Body>\r\n                <Container>\r\n                    <Row className=\"tenant-body\">\r\n                        <Col lg={4} md={4} sm={12}>\r\n                        <img src={tenant.img}></img>\r\n                        </Col>\r\n                        <Col className=\"tenant-info\" lg={4} md={4} sm={12}>\r\n                        <p>Name: {tenant.fname} {tenant.lname}</p>\r\n                        <p>Email: {tenant.email}</p>\r\n                        <p>Building: {tenant.building}</p>\r\n                        <p>Apt: {tenant.apartment}</p>\r\n                        </Col>\r\n                        <Col lg={3} md={3} sm={12}>\r\n                        <div className=\"edit-btm\">\r\n                            \r\n                            <Button onClick={() => setShowModal(true)}>Update</Button>\r\n                            <Button onClick={handleDelete}>Delete</Button>\r\n                        </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    );\r\n\r\n    return (\r\n        <div className=\"c-tenant-view\">\r\n            <Accordion defaultActiveKey={selectedTenant}>\r\n                {tenantsView}\r\n            </Accordion>\r\n            {tenants && selectedTenant !== null ? \r\n            <UpdateTenantsModal\r\n                show={showModal} \r\n                user={tenants[selectedTenant]}\r\n                handleClose={() => setShowModal(false)} \r\n                updateTenant={updateTenantsInfoFromModal} \r\n                id={tenants[selectedTenant].id} \r\n                currentFname={tenants[selectedTenant].fname} \r\n                currentLname={tenants[selectedTenant].lname} \r\n                currentEmail={tenants[selectedTenant].email}\r\n                currentBuilding={tenants[selectedTenant].building}\r\n                currentApartment={tenants[selectedTenant].apartment}\r\n                currentImg={tenants[selectedTenant].img}></UpdateTenantsModal> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TenantsView;","import React, { useState } from 'react';\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\r\nimport './Tenants.css';\r\nimport NewTenantModal from '../../components/NewTenantModat/NewTenantModal';\r\nimport TenantsView from '../../components/TenantsView/TenantsView';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\n//Tenants component is the page were committee member can see all tenants related to his community and filter them\r\n//Committee member can add a new tenant, change their details end delete them \r\nfunction Tenants(props) {\r\n    const {activeUser, users, addTenant, updateTenantInfo, deleteTenant, onLogOut} = props;\r\n    const [searchByStr, setSearchByStr] = useState(\"\");\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    if(!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    //convert data to presentation\r\n    let tenants = users.filter(user=> user.deleted === false && user.isCommitteeMember === false);\r\n    const filteredTenants = tenants.filter(tenant => (tenant.fname.includes(searchByStr) || tenant.lname.includes(searchByStr)));\r\n\r\n        \r\n    return (\r\n        <div className=\"p-tenants\">\r\n            <div className=\"filters\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg={12}>\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicSearch\">\r\n                                <Form.Control value={searchByStr} type=\"text\" placeholder=\"Filter by tenant's name\" onChange={e => setSearchByStr(e.target.value)}/>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"new-msg-btn\">\r\n                            <Button variant=\"link\" onClick={() => setShowModal(true)}>New Tenant</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                \r\n            </div>\r\n            \r\n            <Container>\r\n                <TenantsView tenants={filteredTenants} activeUser={activeUser} deleteTenant={deleteTenant} updateTenantsInfoFromModal={updateTenantInfo}/>\r\n            </Container>\r\n            <NewTenantModal show={showModal} handleClose={() => setShowModal(false)} addTenant={addTenant}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tenants;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport './Dashboards.css';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport MessagesView from '../../components/MessagesView/MessagesView';\r\nimport VotingsView from '../../components/VotingsView/VotingsView';\r\nimport { EmojiSmileFill } from 'react-bootstrap-icons';\r\n\r\nfunction Dashboards(props) {\r\n    const {activeUser, messages, votings, addVoting, updateVoting, updateSelectedVote, onLogOut, users} = props;\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    //convert data to presentation\r\n\r\n    const messagesArr = messages.filter(msg => msg.readBy.indexOf(activeUser.id) === -1);\r\n    const activeVotingsArr = activeUser.isCommitteeMember ? \r\n      votings.filter(voting => voting.endDate >= new Date()): \r\n      votings.filter(voting => ((voting.endDate >= new Date()) && (voting.results.map(res => res[\"user\"]).indexOf(activeUser.id) === -1)));\r\n    const finishedVotingsArr = votings.filter(voting => voting.endDate < new Date());\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"p-dashboards\">\r\n            <Container>\r\n                <Row>\r\n                    <Col md={6} sm={12}>\r\n                        <p>New Messages {messagesArr.length}</p>\r\n                         {messagesArr.length > 0 ?\r\n                            <MessagesView messages={messagesArr} activeUser={activeUser} deleteMessage={null} updateMessageFromModal={null}/> :\r\n                            <p>There are no new messages <EmojiSmileFill></EmojiSmileFill></p>}\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <p>Pending Votings {activeVotingsArr.length}</p>\r\n                        {activeVotingsArr.length > 0 ?                        \r\n                            <VotingsView isActive={true} votings={activeVotingsArr} activeUser={activeUser} updateVotingFromModal={updateVoting} updateSelectedVote={updateSelectedVote} users={users}/> :\r\n                            <p>There are no pending votings <EmojiSmileFill></EmojiSmileFill></p>}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} sm={12}>\r\n                    <p>Voting Results</p>\r\n                    {finishedVotingsArr.length > 0 ? \r\n                        <VotingsView isActive={false} votings={finishedVotingsArr} activeUser={activeUser} updateVotingFromModal={null} users={users}/> : \r\n                        <p>There are no votings results <EmojiSmileFill></EmojiSmileFill></p>}\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <p>New Issues</p>\r\n                        There are no new issues <EmojiSmileFill></EmojiSmileFill>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboards;","import { ExclamationTriangle, InfoCircle } from 'react-bootstrap-icons';\r\n\r\nclass MessageModel {\r\n    constructor(results){\r\n        this.id = results.id;\r\n        this.createdAt = results.get(\"createdAt\");\r\n        this.title = results.get(\"title\");\r\n        this.details = results.get(\"details\");\r\n        this.priority = results.get(\"priorityName\");\r\n        this.img = results.get(\"img\") ? results.get(\"img\").url() : null;\r\n        this.readBy = results.get(\"readBy\");\r\n        this.parseMsg = results;\r\n    }\r\n\r\n    getIcon() {\r\n        if(this.priority === \"Info\"){\r\n            return <InfoCircle/>\r\n        } else {\r\n            return <ExclamationTriangle/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default MessageModel;","import { Dropdown } from \"react-bootstrap\";\r\n\r\nclass VotingModel {\r\n    constructor(parseVoting){\r\n        this.id = parseVoting.id;\r\n        this.title = parseVoting.get(\"title\");\r\n        this.details = parseVoting.get(\"details\");\r\n        this.options = parseVoting.get(\"options\");\r\n        this.results = parseVoting.get(\"results\");\r\n        this.endDate = parseVoting.get(\"endDate\");\r\n        this.community = parseVoting.get(\"community\");\r\n        this.parseVotingObj = parseVoting;\r\n    }\r\n\r\n    getFinalResult(){\r\n        let dataArr = [];\r\n        for (let i = 0; i < this.options.length; i++){\r\n            dataArr[i] = 0;\r\n        }\r\n        for (const res of this.results) {\r\n            dataArr[this.options.indexOf(res[\"vote\"])] ++;\r\n        }\r\n        return this.options[dataArr.indexOf(Math.max(...dataArr))];\r\n    }\r\n\r\n    getOptionsItems() {\r\n        let optionsArr = [];\r\n        for(let i of this.options){\r\n            optionsArr.push(<Dropdown.Item value={i}>{i}</Dropdown.Item>)\r\n        }\r\n        return optionsArr;\r\n    }\r\n}\r\n\r\nexport default VotingModel;","// @flow\r\nimport * as React from 'react';\r\nimport {Nav, Navbar, NavDropdown} from 'react-bootstrap';\r\nimport './Navbar.css';\r\n\r\n\r\nexport function AppNavbar(props) {\r\n  const {activeUser, onLogOut } = props;\r\n\r\n  let greetUser;\r\n  if (activeUser) {\r\n    greetUser = \"Hello \" + activeUser.fname;\r\n  }\r\n  return (\r\n    <div className=\"c-nav\">\r\n      <Navbar expand=\"md\">\r\n        <Navbar.Brand href=\"#/\">HAM System</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav activeKey=\"#\" className=\"mr-auto\">\r\n              {activeUser ? <Nav.Link href=\"#/\">Home</Nav.Link> : null}\r\n              {activeUser ? <Nav.Link href=\"#/dashboards\">Dashboards</Nav.Link> : null}\r\n              {activeUser && activeUser.isCommitteeMember ? <Nav.Link href=\"#/tenants\">Tenants</Nav.Link> : null}\r\n              {activeUser ? <Nav.Link href=\"#/messages\">Messages</Nav.Link> : null}\r\n              {activeUser ? <Nav.Link href=\"#/votings\">Votings</Nav.Link> : null}\r\n            </Nav>\r\n            <Nav className=\"ml-auto\">\r\n            {/* {activeUser ? <NavDropdown title={greetUser} id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item className=\"logout\" href=\"#\" onClick={() => onLogOut()}>LogOut</NavDropdown.Item>\r\n                </NavDropdown> : null} */}\r\n              {activeUser ? null : <Nav.Link href=\"#/login\">LogIn</Nav.Link>}\r\n              {activeUser ? null : <Nav.Link href=\"#/signup\">SignUp</Nav.Link>}\r\n              {activeUser ? <Nav.Link >{greetUser}</Nav.Link> : null}\r\n              {activeUser ? <Nav.Link href=\"#\" onClick={() => onLogOut()}>LogOut</Nav.Link> : null}\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n    </div>\r\n  );\r\n};","import './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { LogIn } from './pages/LogIn/LogIn';\nimport { SignUp } from './pages/SignUp/SignUp';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { useEffect, useState } from 'react';\nimport Parse from 'parse';\nimport UserModel from './models/UserModel';\nimport Messages from './pages/Messages/Messages';\nimport Votings from './pages/Votings/Votings';\nimport Tenants from './pages/Tenants/Tenants';\nimport Dashboards from './pages/Dashboards/Dashboards';\nimport MessageModel from './models/MessageModel';\nimport VotingModel from './models/VotingModel';\nimport { AppNavbar } from './components/Navbar/Navbar';\n\n//App is the main component\n//Here we fetch all data and handle the connection wih the DB\n//users is an array of all relevnt users by the active user's community\n//messages is an array of all relevant messages by the active user's community\n//votings is an array of all relevant votings by the active user's community\n\nfunction App() {\n  const [activeUser, setActiveUser] = useState(\n    Parse.User.current() ? new UserModel(Parse.User.current()) : null);\n  const [redirect, setRedirect] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [votings, setVotings] = useState([]);\n\n  useEffect(()=> {\n    async function fetchUsersData() {\n      const parseUser = Parse.Object.extend('User');\n      const query = new Parse.Query(parseUser);\n      const community = new Parse.Object.extend('Community');\n      community.id = activeUser.community;\n      query.equalTo(\"community\", activeUser.community);\n      // query.equalTo(\"deleted\", false);\n      try {\n        const parseUsers = await query.find();\n        setUsers(parseUsers.map(item => new UserModel(item)));\n        console.log(\"Success! users arr\", parseUsers.map(item => new UserModel(item)));\n      } catch (error) {\n        console.log(\"Error! users arr\", error);\n      }\n    }\n\n    async function fetchMessagesData() {\n        const parseMessage = Parse.Object.extend('message');\n        const query = new Parse.Query(parseMessage);\n        query.equalTo(\"community\", activeUser.community);\n        try {const parseMessages = await query.find();\n        setMessages(parseMessages.map(item => new MessageModel(item)));\n        console.log(\"Success! messages arr: \", parseMessages);}\n        catch (error) {\n          console.log(\"Error! messages arr\", error);\n        }\n    }\n\n    async function fetchVotingsData() {\n      const Voting = Parse.Object.extend('Voting');\n      const query = new Parse.Query(Voting);\n      query.equalTo(\"community\", activeUser.community);\n      try {\n        const parseVotings = await query.find();\n        setVotings(parseVotings.map(item => new VotingModel(item)));\n        console.log(\"Success! votings arr\", votings);\n      } catch (error){\n        console.log(\"Error! votings arr\", error);\n      }\n      \n  }\n\n    if (activeUser) {\n        fetchUsersData();\n        fetchMessagesData();\n        fetchVotingsData();\n    }\n}, [activeUser])\n\n  function handleLogin(loggedInUser) {\n    setActiveUser(loggedInUser);\n    setRedirect(false);\n  }\n\n  function handleLogout(loggedInUser) {\n    setActiveUser(null);\n    Parse.User.logOut();\n    setRedirect(true);\n  }\n\n  function handleSignup(loggedInUser) {\n    setActiveUser(loggedInUser);\n    setRedirect(false);\n  }\n\n  async function addMessage(title, details, priority, img) {\n    const message = Parse.Object.extend('message');\n    const newMessage = new message();\n    \n    newMessage.set('title', title);\n    newMessage.set('details', details);\n    newMessage.set('priorityName', priority);\n    newMessage.set('img', new Parse.File(img.name, img));\n    newMessage.set('createdBy', Parse.User.current());\n    newMessage.set('readBy', [activeUser.id]);\n    newMessage.set('community', activeUser.community)\n    \n    try {const parseMessage = await newMessage.save();\n      console.log(\"Success! add message: \", parseMessage)\n      setMessages(messages.concat(new MessageModel(parseMessage)));\n    } catch (error){\n      console.log(\"Error! add message\", error);\n    }\n}\n\nasync function updateMessage(id, title, details, priority, img) {\n    const message = Parse.Object.extend('message');\n    const query = new Parse.Query(message);\n    const object = await query.get(id);\n    object.set('title', title);\n    object.set('details', details);\n    object.set('priorityName', priority);\n    object.set('img',  new Parse.File(img.name, img));\n    try {const response = await object.save();\n      console.log('Success! updated message', response);\n      const tmpArr = messages.filter(item => item.id !== id);\n      setMessages(tmpArr.concat(new MessageModel(response)));\n    } catch (error) {\n      console.log(\"Error! update message\", error);\n    } \n}\n\nasync function deleteMessage(id) {\n    const ParseMessage = Parse.Object.extend('message');\n    const query = new Parse.Query(ParseMessage);\n    const object = await query.get(id);\n    try {\n      const response = await object.destroy();\n      console.log('Success! deleted message', response);\n      const tmpArr = messages.filter(item => item.id !== id);\n      setMessages(tmpArr);\n    } catch (error) {\n      console.log(\"Error! delete message\", error);\n    }\n}\n\nasync function addVoting(title, details, endDate, options) {\n  const Voting = Parse.Object.extend('Voting');\n  const myNewObject = new Voting();\n  \n  myNewObject.set('title', title);\n  myNewObject.set('details', details);\n  myNewObject.set('options', options);\n  myNewObject.set('endDate', new Date(endDate));\n  myNewObject.set('community', activeUser.parseUser.get(\"community\"));\n  myNewObject.set('results', []);\n  \n  try{\n      const result = await myNewObject.save();\n      console.log('Success! add voting', result);\n      setVotings(votings.concat(new VotingModel(result)))\n  }\n  catch(error){\n    console.log(\"Error! add voting\", error);\n  }\n}\n\nasync function updateVoting(endDate, voting) {\n  const Voting = Parse.Object.extend('Voting');\n  const query = new Parse.Query(Voting);\n  const object = await query.get(voting.id);\n  \n  object.set('endDate', new Date(endDate));\n \n  try {\n      const response = await object.save();\n      console.log('Success! updated voting end date', response);\n      let items = [...votings];\n      const getIndex = votings.indexOf(voting);\n      items[getIndex] = new VotingModel(response);\n      setVotings(items);\n  } catch (error) {\n      console.log(\"Error! update voting end date\", error);\n  }\n}\n\nasync function updateSelectedVote(vote, voting) {\n  const Voting = Parse.Object.extend('Voting');\n  const query = new Parse.Query(Voting);\n  const object = await query.get(voting.id);\n  let results = voting.results.concat({\"user\": activeUser.id, \"vote\": vote});\n  object.set('results', results);\n \n  try {\n      const response = await object.save();\n      console.log('Success! updated voting results', response);\n      let items = [...votings];\n      const getIndex = votings.indexOf(voting);\n      items[getIndex] = new VotingModel(response);\n      setVotings(items);\n  } catch (error) {\n      console.log(\"Error! update voting results\", error);\n  }\n}\n\nasync function addTenant(fname, lname, email, building, apartment, img) {\n  const user = Parse.Object.extend('User');\n  const newUser = new user();\n  let acl = new Parse.ACL();\n  acl.setPublicWriteAccess( true );\n  acl.setPublicReadAccess( true);\n  newUser.setACL( acl );\n  newUser.set('fname', fname);\n  newUser.set('lname', lname);\n  newUser.set('username', fname + lname);\n  newUser.set('email', email);\n  newUser.set('fetchEmail', email);\n  newUser.set('password', \"123\");\n  newUser.set('building', building);\n  newUser.set('apartment', apartment);\n  newUser.set('img', new Parse.File(img.name, img));\n  newUser.set('community', activeUser.parseUser.get(\"community\"));\n  newUser.set('isCommitteeMember', false);\n  try {\n      const parseUser = await newUser.save();\n      setUsers(users.concat(new UserModel(parseUser)));\n      console.log('Success! adding user(tenant)', parseUser);\n    } catch (error){\n      console.log(\"Error! adding user(tenant)\", error);\n  }\n}\n\nasync function updateTenantInfo(tenant, id, fname, lname, email, building, apartment, img) {\n  const User = new Parse.User();\n  const query = new Parse.Query(User);\n  const user = await query.get(id);\n  user.set('fname', fname);\n  user.set('lname', lname);\n  user.set('email', email);\n  user.set('fetchEmail', email);\n  user.set('building', building);\n  user.set('apartment', apartment);\n  user.set('img',  new Parse.File(img.name, img));\n  try {\n      const response = await user.save();\n      console.log('Success! updating user(tenant)', response);\n      let items = [...users];\n      const getIndex = users.indexOf(tenant);\n      items[getIndex] = new UserModel(response);\n      setUsers(items);\n  } catch(error) {\n      console.error('Error! updating user(tenant)', error);\n  }\n}\n\nasync function deleteTenant(id) {\n  const User = new Parse.User();\n  const query = new Parse.Query(User);\n\n  const user = await query.get(id);\n  user.set('deleted', true);\n  try {\n      const response = await user.save();\n      console.log('Success! delete user(tenant)', response);\n      const tmpArr = users.filter(item => item.id !== id);\n      setUsers(tmpArr);\n  } catch(error) {\n      console.error('Error! delete user(tenant)', error);\n  }\n}\n\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <AppNavbar activeUser={activeUser} onLogOut={handleLogout}></AppNavbar>\n        <Switch>\n          <Route exact path=\"/\"><HomePage activeUser={activeUser} onLogOut={handleLogout}/></Route>\n          <Route exact path=\"/dashboards\"><Dashboards activeUser={activeUser} messages={messages} votings={votings} addVoting={addVoting} updateVoting={updateVoting} updateSelectedVote={updateSelectedVote} onLogOut={handleLogout} users={users}/></Route>\n          {activeUser && activeUser.isCommitteeMember ? <Route exact path=\"/tenants\"><Tenants activeUser={activeUser} users={users} addTenant={addTenant} updateTenantInfo={updateTenantInfo} deleteTenant={deleteTenant} onLogOut={handleLogout}/></Route> : null}\n          <Route exact path=\"/messages\"><Messages activeUser={activeUser} users={users} messages={messages} addMessage={addMessage} updateMessage={updateMessage} deleteMessage={deleteMessage} onLogOut={handleLogout}/></Route>\n          <Route exact path=\"/votings\"><Votings activeUser={activeUser} votings={votings} addVoting={addVoting} updateVoting={updateVoting} updateSelectedVote={updateSelectedVote} onLogOut={handleLogout} users={users}/></Route>\n          <Route exact path=\"/login\"><LogIn onLogIn={handleLogin}/></Route>\n          <Route exact path=\"/signup\"><SignUp onSignUp={handleSignup}/></Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Parse from 'parse';\n\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\nParse.initialize(\n  '51WTBPdplru4mxpDvag4nrEUfNZgUyfxbIgCy7ax', // This is your Application ID\n  'OBjrtMi5wsuIwzeW09gsZoP9FFclzAoGUU9bhTaW' // This is your Javascript key\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}